unit VQBBloodProduct;

interface

uses
  SysUtils, StdCtrls, Buttons,
  Vcl.ComCtrls, DateUtils, Forms, Dialogs,
  MQBTheAmountOfBloodOnPreserving,
  MQBTheNumberOfWholeBlood,
  MQBTheNumberOfConservedBlood,
  MQBTheAmountOfReinfusionWithAPA,
  MQBTheAmountOfReinfusionWithTrombo,
  UVFLabel,
  UVFTitleLabel,
  UVFEdit,
  UVFDateTimePicker,
  UVFBitBtn;

type
  TBloodProduct = class
  private
    StartDate: ITempLabelTag5;
    EndDate: ITempLabelTag5;
    NameStat1: ITempLabelTag5;
    NameStat2: ITempLabelTag5;
    NameStat3: ITempLabelTag5;
    NameStat4: ITempLabelTag5;
    NameStat5: ITempLabelTag5;
    Title: ITitleLabelTag5;

    ResultEdit1: IEditTag5;
    ResultEdit2: IEditTag5;
    ResultEdit3: IEditTag5;
    ResultEdit4: IEditTag5;
    ResultEdit5: IEditTag5;

    StartDateCal: IDTPickerTag5;
    EndDateCal: IDTPickerTag5;

    ButtonAction: IBitBtnTag5;

    CurrentForm: TForm;

    TheAmountOfBloodOnPreserving: ITheAmountOfBloodOnPreserving;
    TheNumberOfWholeBlood: ITheNumberOfWholeBlood;
    TheNumberOfConservedBlood: ITheNumberOfConservedBlood;
    TheAmountOfReinfusionWithAPA: ITheAmountOfReinfusionWithAPA;
    TheAmountOfReinfusionWithTrombo: ITheAmountOfReinfusionWithTrombo;

  public
    function GetLabelStartDate(NameForm: TForm): TLabel;
    function GetLabelEndDate(NameForm: TForm): TLabel;
    function GetLabelNameStat1(NameForm: TForm): TLabel;
    function GetLabelNameStat2(NameForm: TForm): TLabel;
    function GetLabelNameStat3(NameForm: TForm): TLabel;
    function GetLabelNameStat4(NameForm: TForm): TLabel;
    function GetLabelNameStat5(NameForm: TForm): TLabel;
    function GetLabelTitle(NameForm: TForm): TLabel;

    function GetEdit1(NameForm: TForm): TEdit;
    function GetEdit2(NameForm: TForm): TEdit;
    function GetEdit3(NameForm: TForm): TEdit;
    function GetEdit4(NameForm: TForm): TEdit;
    function GetEdit5(NameForm: TForm): TEdit;

    function GetCalendarStartDate(NameForm: TForm): TDateTimePicker;
    function GetCalendarEndDate(NameForm: TForm): TDateTimePicker;

    function GetButtonAction(NameForm: TForm): TBitBtn;
    procedure ButtonAct(Sender: TObject);
    constructor create(form: TForm);

  end;

implementation

{ TBloodProduct }

procedure TBloodProduct.ButtonAct(Sender: TObject);
begin
  if StartDateCal.GetData > GetCalendarEndDate(CurrentForm).Date
  then
  begin
    ShowMessage('Конечная дата не может быть меньше начальной');
    exit;
  end
  else
  begin
    if not Assigned(TheNumberOfConservedBlood) then
      TheAmountOfBloodOnPreserving := TTheAmountOfBloodOnPreserving.create
        (StartDateCal.GetData, EndDateCal.GetData);
    ResultEdit1.WriteText(TheAmountOfBloodOnPreserving.GetValue);
    TheAmountOfBloodOnPreserving := nil;

    if not Assigned(TheNumberOfWholeBlood) then
      TheNumberOfWholeBlood := TTheNumberOfWholeBlood.create
        (StartDateCal.GetData, EndDateCal.GetData);
    ResultEdit2.WriteText(TheNumberOfWholeBlood.GetValue);
    TheNumberOfWholeBlood := nil;

    if not Assigned(TheNumberOfConservedBlood) then
      TheNumberOfConservedBlood := TTheNumberOfConservedBlood.create
        (StartDateCal.GetData, EndDateCal.GetData);
    ResultEdit3.WriteText(TheNumberOfConservedBlood.GetValue);
    TheNumberOfConservedBlood := nil;

    if not Assigned(TheAmountOfReinfusionWithAPA) then
      TheAmountOfReinfusionWithAPA := TTheAmountOfReinfusionWithAPA.create
        (StartDateCal.GetData, EndDateCal.GetData);
    ResultEdit4.WriteText(TheAmountOfReinfusionWithAPA.GetValue);
    TheAmountOfReinfusionWithAPA := nil;

    if not Assigned(TheAmountOfReinfusionWithTrombo) then
      TheAmountOfReinfusionWithTrombo := TTheAmountOfReinfusionWithTrombo.create
        (StartDateCal.GetData, EndDateCal.GetData);
    ResultEdit5.WriteText(TheAmountOfReinfusionWithTrombo.GetValue);
    TheAmountOfReinfusionWithTrombo := nil;

    ShowMessage('Запрос выполнен!');
  end;

end;

constructor TBloodProduct.create(form: TForm);
begin
  CurrentForm:=Form;

  GetLabelStartDate(form);
  GetLabelEndDate(form);
  GetLabelNameStat1(form);
  GetLabelNameStat2(form);
  GetLabelNameStat3(form);
  GetLabelNameStat4(form);
  GetLabelNameStat5(form);
  GetLabelTitle(form);


  GetCalendarStartDate(form);
  GetCalendarEndDate(form);

  GetEdit1(form);
  GetEdit2(form);
  GetEdit3(form);
  GetEdit4(form);
  GetEdit5(form);

  GetButtonAction(form);

end;

function TBloodProduct.GetEdit1(NameForm: TForm): TEdit;
begin
  if not Assigned(ResultEdit1) then
    ResultEdit1 := TEditTag5.create;
  Result:=ResultEdit1.GetEdit(520, 180, 100, 12, NameForm);
end;

function TBloodProduct.GetEdit2(NameForm: TForm): TEdit;
begin
  if not Assigned(ResultEdit2) then
    ResultEdit2 := TEditTag5.create;
  Result:=ResultEdit2.GetEdit(520, 220, 100, 12, NameForm);
end;

function TBloodProduct.GetEdit3(NameForm: TForm): TEdit;
begin
  if not Assigned(ResultEdit3) then
    ResultEdit3 := TEditTag5.create;
  Result:=ResultEdit3.GetEdit(520, 260, 100, 12, NameForm);
end;

function TBloodProduct.GetEdit4(NameForm: TForm): TEdit;
begin
  if not Assigned(ResultEdit4) then
    ResultEdit4 := TEditTag5.create;
  Result:=ResultEdit4.GetEdit(520, 300, 100, 12, NameForm);
end;

function TBloodProduct.GetEdit5(NameForm: TForm): TEdit;
begin
  if not Assigned(ResultEdit5) then
    ResultEdit5 := TEditTag5.create;
  Result:=ResultEdit5.GetEdit(520, 340, 100, 12, NameForm);
end;

function TBloodProduct.GetButtonAction(NameForm: TForm): TBitBtn;
begin
  if not Assigned(ButtonAction) then
    ButtonAction := TBitBtnTag5.create;
  Result:=ButtonAction.GetBitBtn(ButtonAct, NameForm);
end;

function TBloodProduct.GetCalendarStartDate(NameForm: TForm)
  : TDateTimePicker;
begin
  if not Assigned(StartDateCal) then
    StartDateCal:=TDTPickerTag5.Create;
  result:=StartDateCal.GetDTPicker(250, 80, EncodeDate(YearOf(Now), MonthOf(Now) - 1, 1), NameForm);
end;

function TBloodProduct.GetCalendarEndDate(NameForm: TForm): TDateTimePicker;
begin
  if not Assigned(EndDateCal) then
    EndDateCal:=TDTPickerTag5.Create;
  result:=EndDateCal.GetDTPicker(250, 120, EncodeDate(YearOf(Now), MonthOf(Now), 1) - 1, NameForm);
end;

function TBloodProduct.GetLabelEndDate(NameForm: TForm): TLabel;
begin
  if not Assigned(EndDate) then
    EndDate := TTempLabelTag5.create;
  result := EndDate.GetTempLabel(50, 120, 20, 'Конечная дата:',
    NameForm);
end;

function TBloodProduct.GetLabelNameStat1(NameForm: TForm): TLabel;
begin
  if not Assigned(NameStat1) then
    NameStat1 := TTempLabelTag5.create;
  result := NameStat1.GetTempLabel(50, 180, 20, 'Количество крови на консервирование:',
    NameForm);
end;

function TBloodProduct.GetLabelNameStat2(NameForm: TForm): TLabel;
begin
  if not Assigned(NameStat2) then
    NameStat2 := TTempLabelTag5.create;
  result := NameStat2.GetTempLabel(50, 220, 20, 'Количество цельной крови:',
    NameForm);
end;

function TBloodProduct.GetLabelNameStat3(NameForm: TForm): TLabel;
begin
  if not Assigned(NameStat3) then
    NameStat3 := TTempLabelTag5.create;
  result := NameStat3.GetTempLabel(50, 260, 20, 'Количество консервированной крови:',
    NameForm);
end;

function TBloodProduct.GetLabelNameStat4(NameForm: TForm): TLabel;
begin
  if not Assigned(NameStat4) then
    NameStat4 := TTempLabelTag5.create;
  result := NameStat4.GetTempLabel(50, 300, 20, 'Объем реинфузии с АПА:',
    NameForm);
end;

function TBloodProduct.GetLabelNameStat5(NameForm: TForm): TLabel;
begin
  if not Assigned(NameStat5) then
    NameStat5 := TTempLabelTag5.create;
  result := NameStat5.GetTempLabel(50, 340, 20, 'Объем реинфузии с АПА:',
    NameForm);
end;

function TBloodProduct.GetLabelStartDate(NameForm: TForm): TLabel;
begin
  if not Assigned(StartDate) then
    StartDate := TTempLabelTag5.create;
  result := StartDate.GetTempLabel(50, 80, 20, 'Начальная дата:', NameForm);
end;

function TBloodProduct.GetLabelTitle(NameForm: TForm): TLabel;
begin
  if not Assigned(Title) then
    Title := TTitleLabelTag5.create;
  result := Title.GetTitleLabel(25, 'Заготовка крови', NameForm);
end;

end.
